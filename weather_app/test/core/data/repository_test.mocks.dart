// Mocks generated by Mockito 5.4.2 from annotations
// in weather_app/test/core/data/repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

// ðŸŽ¯ Dart imports:
import 'dart:async' as _i4;

// ðŸ“¦ Package imports:
import 'package:mockito/mockito.dart' as _i1;

// ðŸŒŽ Project imports:
import 'package:weather_app/core/data/repository.dart' as _i3;
import 'package:weather_app/core/domain/model/saved_location_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSavedLocationModel_0 extends _i1.SmartFake
    implements _i2.SavedLocationModel {
  _FakeSavedLocationModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CoreRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoreRepository extends _i1.Mock implements _i3.CoreRepository {
  @override
  _i4.Future<List<_i2.SavedLocationModel>> getSavedLocations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedLocations,
          [],
        ),
        returnValue: _i4.Future<List<_i2.SavedLocationModel>>.value(
            <_i2.SavedLocationModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.SavedLocationModel>>.value(
                <_i2.SavedLocationModel>[]),
      ) as _i4.Future<List<_i2.SavedLocationModel>>);
  @override
  _i4.Future<_i2.SavedLocationModel> searchLocation({required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchLocation,
          [],
          {#query: query},
        ),
        returnValue:
            _i4.Future<_i2.SavedLocationModel>.value(_FakeSavedLocationModel_0(
          this,
          Invocation.method(
            #searchLocation,
            [],
            {#query: query},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.SavedLocationModel>.value(_FakeSavedLocationModel_0(
          this,
          Invocation.method(
            #searchLocation,
            [],
            {#query: query},
          ),
        )),
      ) as _i4.Future<_i2.SavedLocationModel>);
}
