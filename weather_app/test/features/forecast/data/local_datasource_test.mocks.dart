// Mocks generated by Mockito 5.4.2 from annotations
// in weather_app/test/features/forecast/data/local_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/core/domain/model/location_model.dart' as _i5;
import 'package:weather_app/features/forecast/data/local_datasource.dart'
    as _i2;
import 'package:weather_app/features/forecast/domain/model/forecast_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ForecastLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockForecastLocalDataSource extends _i1.Mock
    implements _i2.ForecastLocalDataSource {
  @override
  _i3.Future<List<_i4.ForecastModel>?> hasCached(
          {required _i5.LocationModel? location}) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasCached,
          [],
          {#location: location},
        ),
        returnValue: _i3.Future<List<_i4.ForecastModel>?>.value(),
        returnValueForMissingStub: _i3.Future<List<_i4.ForecastModel>?>.value(),
      ) as _i3.Future<List<_i4.ForecastModel>?>);
  @override
  _i3.Future<List<List<_i4.ForecastModel>>> getSavedForecasts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedForecasts,
          [],
        ),
        returnValue: _i3.Future<List<List<_i4.ForecastModel>>>.value(
            <List<_i4.ForecastModel>>[]),
        returnValueForMissingStub:
            _i3.Future<List<List<_i4.ForecastModel>>>.value(
                <List<_i4.ForecastModel>>[]),
      ) as _i3.Future<List<List<_i4.ForecastModel>>>);
  @override
  _i3.Future<bool> saveForecast({
    required _i5.LocationModel? location,
    required List<_i4.ForecastModel>? forecast,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveForecast,
          [],
          {
            #location: location,
            #forecast: forecast,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
